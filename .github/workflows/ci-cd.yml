name: CI/CD Pipeline

on:
  push:
    branches:
      - main  

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE_BACKEND: sarang033/expense-backend
      DOCKER_IMAGE_FRONTEND: sarang033/expense-frontend
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USER: ${{ secrets.EC2_USER }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend image
        run: |
          docker build -t $DOCKER_IMAGE_BACKEND -f backend/Dockerfile ./backend
          docker push $DOCKER_IMAGE_BACKEND

      - name: Build and push frontend image
        run: |
          docker build -t $DOCKER_IMAGE_FRONTEND -f frontend/Dockerfile ./frontend
          docker push $DOCKER_IMAGE_FRONTEND

      - name: Copy docker-compose.yml to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "docker-compose.yml"
          target: "~/"

      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Pull the latest Docker images
            docker pull sarang033/expense-backend
            docker pull sarang033/expense-frontend
            
            # Stop and remove existing containers
            docker-compose -f ~/docker-compose.yml down
            
            # Start new containers
            docker-compose -f ~/docker-compose.yml up -d
            
            # Check if containers are running
            docker ps
            
            # Display logs if frontend container is not running
            if ! docker ps | grep -q frontend; then
              echo "Frontend container is not running. Displaying logs:"
              docker-compose -f ~/docker-compose.yml logs frontend
            fi